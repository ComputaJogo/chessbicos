//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "game")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub player_black: i32,
    pub player_white: i32,
    pub time_control: i32,
    pub board: String,
    pub turn: String,
    pub black_time: i32,
    pub white_time: i32,
    pub state: String,
    pub moves: String,
    pub created_at: DateTime,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::time_control::Entity",
        from = "Column::TimeControl",
        to = "super::time_control::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TimeControl,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::PlayerBlack",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users2,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::PlayerWhite",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users1,
}

impl Related<super::time_control::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TimeControl.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
